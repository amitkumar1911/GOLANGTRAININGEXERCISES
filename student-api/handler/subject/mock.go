// Code generated by MockGen. DO NOT EDIT.
// Source: subject.go

// Package subject is a generated GoMock package.
package subject

import (
	reflect "reflect"

	models "github.com/GOLANGTRAININGEXERCISES/student-api/models"
	gomock "github.com/golang/mock/gomock"
)

// MocksubjectService is a mock of subjectService interface.
type MocksubjectService struct {
	ctrl     *gomock.Controller
	recorder *MocksubjectServiceMockRecorder
}

// MocksubjectServiceMockRecorder is the mock recorder for MocksubjectService.
type MocksubjectServiceMockRecorder struct {
	mock *MocksubjectService
}

// NewMocksubjectService creates a new mock instance.
func NewMocksubjectService(ctrl *gomock.Controller) *MocksubjectService {
	mock := &MocksubjectService{ctrl: ctrl}
	mock.recorder = &MocksubjectServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocksubjectService) EXPECT() *MocksubjectServiceMockRecorder {
	return m.recorder
}

// CreateSubject mocks base method.
func (m *MocksubjectService) CreateSubject(arg0 models.Subject) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSubject", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateSubject indicates an expected call of CreateSubject.
func (mr *MocksubjectServiceMockRecorder) CreateSubject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSubject", reflect.TypeOf((*MocksubjectService)(nil).CreateSubject), arg0)
}

// GetSubject mocks base method.
func (m *MocksubjectService) GetSubject(arg0 int) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSubject", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSubject indicates an expected call of GetSubject.
func (mr *MocksubjectServiceMockRecorder) GetSubject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSubject", reflect.TypeOf((*MocksubjectService)(nil).GetSubject), arg0)
}
